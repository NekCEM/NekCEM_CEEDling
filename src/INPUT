c=======================================================================
c
c     Common blocks for cem model.
c
c     Many parameters are defined in the SIZEu file, which is local to
c     each example, so we define them here.
c
c     - nelt is the number of elements
c     - lelt if the length of the element array; we necessarily have
c     nelt <= lelt
c     - nxzfl = lx1*lz1*2*ldim*nelt is the total number of points on the
c     faces
c     - lxzfl = lx1*lz1*2*ldim*lelt is the length of the face-points
c     array
c
c=======================================================================
      common /eflg/ ifcentral,ifupwind,ifsrc,ifpml,ifpp,ifeig,ifpec
     $     ,ifdtn,ifneu,ifpmc,iftm,ifte,ifexct,ifdealias,iffilter
     $     ,ifinhom,ifrob,ifexp,ifrk,ifbdf,ifbdf1,ifbdf2,ifrk45,ifrk22
     $     ,ifpoisson,ific,ifrestart,ifsol,ifdouble,ifcg,ifgmres
     $     ,ifprecon,ifgfdmdd,ifsemg,iffdm
      logical ifcentral,ifupwind,ifsrc,ifpml,ifpp,ifeig,ifpec,ifdtn
     $     ,ifneu,ifpmc,iftm,ifte,ifexct,ifdealias,iffilter,ifinhom
     $     ,ifrob,ifexp,ifrk,ifbdf,ifbdf1,ifbdf2,ifrk45,ifrk22
     $     ,ifpoisson,ific,ifrestart,ifsol,ifdouble,ifcg,ifgmres
     $     ,ifprecon,ifgfdmdd,ifsemg,iffdm

      common /cemfce1/
     $     cemface(2*ldim*lx1*lz1*lelt)
      integer cemface

      common /cemfce2/
     $     ncemface             ! number of points on the faces
      integer ncemface

      common /cemfce3/ icomm_option
      integer icomm_option

      common /regioni/
     $     if_in_region(lelt)   ! put markers for elements in this array
      integer if_in_region

      common /emmod/ imode
      integer imode

      common /irstrt/  irststep,irstdumpno
      integer          irststep,irstdumpno
c=======================================================================

C
C     Input parameters from preprocessors.
C
C     Note that in parallel implementations, we distinguish between
C     distributed data (LELT) and uniformly distributed data.
C
C     Input common block structure:
C
C     INPUT1:  REAL            INPUT5: REAL      with LELT entries
C     INPUT2:  INTEGER         INPUT6: INTEGER   with LELT entries
C     INPUT3:  LOGICAL         INPUT7: LOGICAL   with LELT entries
C     INPUT4:  CHARACTER       INPUT8: CHARACTER with LELT entries
C
      integer    lhis
      PARAMETER (lhis=100) !nek5 defines in SIZE
      COMMON /INPUT1/ PARAM(200)
     $               ,RSTIM,VNEKTON
     $               ,CPFLD(LDIMT1,3)
     $               ,CPGRP(-5:10,LDIMT1,3)
     $               ,QINTEG(LDIMT3,MAXOBJ)
      real  param,rstim,vnekton,cpfld,cpgrp,qinteg
C
      COMMON /INPUT2/ MATYPE(-5:10,LDIMT1)
     $               ,NKTONV,NHIS,LOCHIS(4,lhis)
     $               ,IPSCAL,NPSCAL,IPSCO, ifldmhd
     $               ,IRSTV,IRSTT,IRSTIM,NMEMBER(MAXOBJ),NOBJ
     $               ,NGEOM
      integer matype,nktonv,nhis,lochis,ipscal,npscal,ipsco,ifldmhd
      integer irstv,irstt,irstim,nmember,nobj,ngeom
C
      COMMON /INPUT3/ IF3D
     $               ,IFDG,IFSE,IFHEX,IFTET
     $               ,IFFLOW,IFHEAT,IFTRAN,IFAXIS,IFSTRS,IFSPLIT
     $               ,IFMGRID,IFADVC(LDIMT1),IFTMSH(0:LDIMT1)
     $               ,IFMVBD,IFCHAR,IFNONL(LDIMT1)
     $               ,IFVARP(LDIMT1),IFPSCO(LDIMT1),IFVPS
     $               ,IFMODEL,IFKEPS
     $               ,IFINTQ,IFCONS
     $               ,IFXYO,IFPO,IFVO,IFTO,IFTGO,IFPSO(LDIMT1),IFFMTIN
     $               ,IFBO
     $               ,IFANLS,IFANL2,IFMHD,IFESSR,IFPERT,IFBASE
     $               ,IFCVODE,IFLOMACH,IFEXPLVIS,IFSCHCLOB,IFUSERVP,
     $               IFCYCLIC,IFCOUP, IFVCOUP, IFUSERMV,IFREGUO,
     $               IFXYO_,ifaziv,IFNEKNEK
      LOGICAL         IF3D
     $               ,IFDG,IFSE,IFHEX,IFTET
     $               ,IFFLOW,IFHEAT,IFTRAN,IFAXIS,IFSTRS,IFSPLIT
     $               ,IFMGRID,IFADVC,IFTMSH
     $               ,IFMVBD,IFCHAR,IFNONL
     $               ,IFVARP,IFPSCO,IFVPS
     $               ,IFMODEL,IFKEPS
     $               ,IFINTQ,IFCONS
     $               ,IFXYO,IFPO,IFVO,IFTO,IFTGO,IFPSO,IFFMTIN
     $               ,IFBO
     $               ,IFANLS,IFANL2,IFMHD,IFESSR,IFPERT,IFBASE
     $               ,IFCVODE,IFLOMACH,IFEXPLVIS,IFUSERVP,IFCYCLIC
     $               ,IFSCHCLOB
     $               ,IFCOUP, IFVCOUP, IFUSERMV,IFREGUO,IFXYO_
     $               ,ifaziv,IFNEKNEK
      LOGICAL         IFNAV
      EQUIVALENCE    (IFNAV, IFADVC(1))
C
      COMMON /INPUT4/ HCODE(11,lhis),OCODE(8),RSTV,RSTT,DRIVC(5)
     $               ,INITC(15),TEXTSW(100,2)
      CHARACTER*1     HCODE
      CHARACTER*2     OCODE
      CHARACTER*10    DRIVC
      CHARACTER*14    RSTV,RSTT
      CHARACTER*40    TEXTSW,TURBMOD
      CHARACTER*132    INITC
      EQUIVALENCE    (TURBMOD,TEXTSW(1,1))
C
      COMMON /CFILES/ REAFLE,FLDFLE,DMPFLE,HISFLE,SCHFLE,OREFLE,NREFLE
      CHARACTER*132   REAFLE,FLDFLE,DMPFLE,HISFLE,SCHFLE,OREFLE,NREFLE
      COMMON /CFILE2/ SESSION,PATH,RE2FLE, H5MFLE
      CHARACTER*132   SESSION,PATH,RE2FLE,H5MFLE
C
C proportional to LELT
C
      COMMON /INPUT5/ XC(8,LELT),YC(8,LELT),ZC(8,LELT)
     $               ,BC(5,6,LELT,0:LDIMT1)
     $               ,CURVE(6,12,LELT)
     $               ,CERROR(LELT)
      real xc,yc,zc,bc,curve,cerror
C
      COMMON /INPUT6/ IGROUP(LELT),OBJECT(MAXOBJ,MAXMBR,2)
      INTEGER         IGROUP,OBJECT
C
      COMMON /INPUT8/ CBC(6,LELT,0:LDIMT1),CCURVE(12,LELT)
     $              , CDOF(6,LELT), solver_type
      CHARACTER*1     CCURVE,CDOF
      CHARACTER*3     CBC, solver_type
      COMMON /INPUT9/ IEACT(LELT),NEACT
      integer         ieact,neact
C
C material set ids, BC set ids, materials (f=fluid, s=solid), bc types
      INTEGER          NUMSTS,MATINDX,MATIDS,IBCSTS,IMATIE
      INTEGER          NUMFLU, NUMOTH, NUMBCS, BCF
      CHARACTER*3      BCTYPS
      PARAMETER (NUMSTS=50)
      COMMON /INPUTMI/ NUMFLU, NUMOTH, NUMBCS
     $               , MATINDX(NUMSTS),MATIDS(NUMSTS),IMATIE(LELT)
     $               , IBCSTS (NUMSTS)
      COMMON /INPUTMR/ BCF    (NUMSTS)
      COMMON /INPUTMC/ BCTYPS (NUMSTS)
