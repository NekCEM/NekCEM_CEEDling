#!/usr/bin/env python
from __future__ import division, print_function, absolute_import

import os
import re
import argparse

REAPATTERN = re.compile("^(  \S+ +)([0-9]{1,3}:)")


def redocument(reafile):
    docfile = os.path.join(os.path.dirname(__file__), 'rea.txt')
    with open(docfile) as f:
        doc = f.readlines()
    newrea = []
    with open(reafile, 'r') as rea:
        for i, line in enumerate(rea):
            if i < 4:
                newrea.append(line)
            elif i >= len(doc) + 4:
                newrea.append(line)
            else:
                match = REAPATTERN.match(line)
                if not match:
                    msg = "Invalid line in rea: {}".format(i)
                    raise ValueError(msg)
                start = match.group(1)
                start = start.rstrip().ljust(32, " ")
                num = match.group(2)
                newline = start + doc[i-4]
                newrea.append(newline)
    return newrea


def main():
    description = "update documentation in an rea file"
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument("reafile", help="rea file to parse")
    parser.add_argument("--dry-run", action="store_true",
                        help=("print to stdout instead of overwriting"
                              "the rea file"))
    args = parser.parse_args()

    newrea = redocument(args.reafile)
    if args.dry_run:
        for line in newrea:
            print(line, end='')
    else:
        with open(args.reafile, 'w') as rea:
            for line in newrea:
                rea.write(line)


if __name__ == "__main__":
    main()
